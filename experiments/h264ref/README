1. Make SPEC benchmark using the -fdump-tree-original-raw flag.
hana$ cd /research/scrap2/dl575/spec-prediction
hana$ source cshrc
hana$ runspec --action=build --config=dlo-linux-dumptree h264ref

2. Find the produced AST file and copy it here.
hana$ cp benchspec/CPU2006/464.h264ref/build/build_base_gcc43-64bit.0003/mv-search.c.t02.original ~
$ scp hana:~/.original .

3. Run parsing scripts
$ ../../parse/parse_function.py mv-search.c.t02.original SetupFastFullPelSearch > parsed.function
$ ../../parse/get_conditionals.py parsed.function > auto_metrics.c
$ ../../parse/get_functions.py parsed.function >> auto_metrics.c

  DEBUG: Remove the following (causes seg fault when running h264ref).
    printf("%d, ", (int)(img->mb_data + (img->current_mb_nr * 632))->mb_field);

4. Manually copy the results in auto_metrics.c back into the start of mv-search.c in the h264ref source.

5. Build and run spec with metrics printed out (either 5a or 5b).
hana$ runspec --action=build --config=dlo-linux-metrics h264ref

  5a. Use custom script (2-3 minutes)
  hana$ cd benchspec/CPU2006/464.h264ref/exe/
  hana$ ./run_h264.sh > h264ref.log

  5b. Use runspec. This can be slow (24 minutes) as it runs a bunch of stuff, including diffs to check output.
  hana$ runspec --action=run --config=dlo-linux-metrics --noreportable --iterations 1 h264ref
  Outputs can be found in benchspec/CPU2006/464.h264ref/run/run_base_ref_gcc43-64bit.0002/

6. Copy the simulation output here
                                                                                           
7. Run SVM scripts (Remember to first run "source setup.sh" in the base of the repo.")

svm_sweep_threshold.py h264ref.log
  Select [8] ffmpeg_parse_auto_metrics.py
svm_plot_test.py svm_out.parse8
