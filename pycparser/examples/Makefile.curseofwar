PYTHON=/usr/bin/python
DIRNAME=curseofwar
FILENAME=$(DIRNAME)/main
FUNCNAME=run_loop
LOOP_COUNT_FLAGS=--write_to_file
GLOBALS_IGNORE=DEBUG_EN

slice: preprocess
	$(PYTHON) inline.py $(FILENAME)3.c $(FUNCNAME) > $(FILENAME)_inline.c
	$(PYTHON) insert_loop_counts.py $(FILENAME)_inline.c $(LOOP_COUNT_FLAGS) > $(FILENAME)_loop_counts.c
	#time $(PYTHON) slice.py $(FILENAME)_loop_counts.c loop_counter > $(FILENAME)_slice.c
	time $(PYTHON) slice.py $(FILENAME)_loop_counts.c loop_counter[0] loop_counter[1] loop_counter[2] loop_counter[4] loop_counter[10] > $(FILENAME)_slice.c
	$(PYTHON) globals.py $(FILENAME)_slice.c run_loop_slice $(GLOBALS_IGNORE) > $(FILENAME)_globals.c
	$(PYTHON) cleanup.py $(FILENAME)_globals.c > $(FILENAME)_cleanup.c
	#$(PYTHON) slice.py $(FILENAME)_cleanup.c loop_counter[0] loop_counter[1] loop_counter[2] loop_counter[4] loop_counter[10] > $(FILENAME)_reduced.c
	#$(PYTHON) cleanup.py $(FILENAME)_reduced.c > $(FILENAME)_reduced_cleanup.c

td = echo "typedef int $1;" | cat - $(FILENAME)3.c > temp && mv temp $(FILENAME)3.c
fd = echo "$1 ();" | cat - $(FILENAME)3.c > temp && mv temp $(FILENAME)3.c
preprocess:
	gcc -E $(FILENAME).c > $(FILENAME)2.c
	./cleanup_gccE.py $(FILENAME)2.c > $(FILENAME)3.c

	$(call fd, "int client_init_session")
	$(call fd, "int server_init")
	$(call fd, "int server_get_msg")
	$(call fd, "int sa_match")
	$(call fd, "int get_options")
	$(call fd, "int sigaction")
	$(call fd, "size_t fread")
	$(call td, "size_t")

	$(call td, "sigset_t")
	$(call td, "uint8_t")
	$(call td, "ssize_t")
	$(call td, "socklen_t")
	$(call td, "sig_atomic_t")

clean:
	rm -f $(FILENAME)2.c
	rm -f $(FILENAME)3.c
	rm -f $(FILENAME)_inline.c
	rm -f $(FILENAME)_loop_counts.c
	rm -f $(FILENAME)_slice.c
	rm -f $(FILENAME)_globals.c
	rm -f $(FILENAME)_cleanup.c
	rm -f $(FILENAME)_reduced.c
	rm -f $(FILENAME)_reduced_cleanup.c
