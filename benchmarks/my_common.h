/* This file includes common functions which 
some of all benchmarks use.
*/

#ifndef __MY_COMMON_H__
#define __MY_COMMON_H__

#include "timing.h"
//constant
#define MILLION 1000000L

//manually set below
#define CORE 1 //0:LITTLE, 1:big

#define PREDICT_EN 0 //0:prediction off, 1:prediction on
#define DELAY_EN 1 //0:delay off, 1:delay on

#define ORACLE_EN 0 //0:oracle off, 1:oracle on
#define PID_EN 0 //0:pid off, 1:pid on

#define GET_PREDICT 0 //to get prediction equation
#define GET_OVERHEAD 0 // to get execution deadline
#define GET_DEADLINE 0 //to get overhead deadline
#define DEBUG_EN 0 //debug information print on/off

#define SWEEP (60) //sweep deadline (e.g, if 90, deadline*0.9)

//always set this as 1 on ODROID
#define DVFS_EN 1 //1:change dvfs, 1:don't change dvfs (e.g., not running on ODROID)

//automatically set
#define MAX_FREQ ((CORE)?(2000000):(1400000))

#define _pocketsphinx_ 0 
#define _stringsearch_ 0
#define _sha_preread_ 1
#define _rijndael_preread_ 0
#define _xpilot_ 0
#define _2048_ 0
#define _curseofwar_ 0
#define _uzbl_ 0


FILE *fp_max_freq; //File pointer scaling_max_freq

void fopen_all(void){
#if DVFS_EN
    #if CORE //big
        if(NULL == (fp_max_freq = fopen("/sys/devices/system/cpu/cpu4/cpufreq/scaling_max_freq", "w"))){
        printf("ERROR : FILE READ FAILED (SEE IF FILE IS PRIVILEGED)\n");
        return;
        }
    #else //LITTLE
        if(NULL == (fp_max_freq = fopen("/sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq", "w"))){
        printf("ERROR : FILE READ FAILED (SEE IF FILE IS PRIVILEGED)\n");
        return;
    }
    #endif
#endif
    return;
}

void fclose_all(void){
#if DVFS_EN
   fclose(fp_max_freq);
#endif
    return;
}

void set_freq(float predicted_exec_time, int slice_time, int deadline_time, int avg_dvfs_time){
#if DVFS_EN
    int predicted_freq = MAX_FREQ;
       
    //calculate predicted freq and round up by adding 99999
    predicted_freq = 1.1 * predicted_exec_time * MAX_FREQ / (deadline_time - slice_time - avg_dvfs_time) + 99999;
    //if less then 200000, just set it minimum (200000)
    predicted_freq = (predicted_freq < 200000 || predicted_exec_time <= 1)?(200000):(predicted_freq);
    //set maximum frequency, because performance governor always use maximum freq.
    fprintf(fp_max_freq, "%d", predicted_freq);
    fflush(fp_max_freq);
#endif

    return;
}

void set_freq_uzbl(float predicted_exec_time, int slice_time, int deadline_time, int avg_dvfs_time){
#if DVFS_EN
    #if CORE //big
        if(NULL == (fp_max_freq = fopen("/sys/devices/system/cpu/cpu4/cpufreq/scaling_max_freq", "w"))){
        printf("ERROR : FILE READ FAILED (SEE IF FILE IS PRIVILEGED)\n");
        return;
        }
    #else //LITTLE
        if(NULL == (fp_max_freq = fopen("/sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq", "w"))){
        printf("ERROR : FILE READ FAILED (SEE IF FILE IS PRIVILEGED)\n");
        return;
    }
    #endif
#endif
    int predicted_freq = MAX_FREQ;
       
    //calculate predicted freq and round up by adding 99999
    predicted_freq = 1.1 * predicted_exec_time * MAX_FREQ / (deadline_time - slice_time - avg_dvfs_time) + 99999;
    //if less then 200000, just set it minimum (200000)
    predicted_freq = (predicted_freq < 200000 || predicted_exec_time <= 1)?(200000):(predicted_freq);
    //set maximum frequency, because performance governor always use maximum freq.
    fprintf(fp_max_freq, "%d", predicted_freq);
#if DVFS_EN
    fclose(fp_max_freq);
#endif
    return;
}


void fprint_freq(void){
#if DVFS_EN
    FILE *fp_freq; //File pointer of freq of A7 (LITTLE) core or A15 (big) core power sensor file
    int khz; //Value (khz) at start point.

    FILE *time_file;
    time_file = fopen("times.txt", "a");
    #if CORE //big
        if(NULL == (fp_freq = fopen("/sys/devices/system/cpu/cpu4/cpufreq/scaling_cur_freq", "r"))){
            printf("ERROR : FILE READ FAILED\n");
            return;
        }
        fscanf(fp_freq, "%d", &khz);
        fprintf(time_file, "big core freq : %dkhz\n", khz);  
    #else //LITTLE
        if(NULL == (fp_freq = fopen("/sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq", "r"))){
            printf("ERROR : FILE READ FAILED (SEE IF FILE IS PRIVILEGED)\n");
            return;
        }
        fscanf(fp_freq, "%d", &khz);
        fprintf(time_file, "little core freq : %dkhz\n", khz);  
    #endif
        fclose(fp_freq);
    fclose(time_file); 
    return;
#endif
}

void print_freq(void){
#if DVFS_EN
    FILE *fp_freq; //File pointer of freq of A7 (LITTLE) core or A15 (big) core power sensor file
    int khz; //Value (khz) at start point.

    #if CORE //big
        if(NULL == (fp_freq = fopen("/sys/devices/system/cpu/cpu4/cpufreq/scaling_cur_freq", "r"))){
            printf("ERROR : FILE READ FAILED\n");
            return;
        }
        fscanf(fp_freq, "%d", &khz);
        printf("big core freq : %dkhz\n", khz);  
    #else //LITTLE
        if(NULL == (fp_freq = fopen("/sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq", "r"))){
            printf("ERROR : FILE READ FAILED (SEE IF FILE IS PRIVILEGED)\n");
            return;
        }
        fscanf(fp_freq, "%d", &khz);
        printf("little core freq : %dkhz\n", khz);  
    #endif
    fclose(fp_freq);
    return;
#endif
}



void fprint_deadline(int deadline_time){
    FILE *time_file;
    time_file = fopen("times.txt", "a");
    fprintf(time_file, "============ deadline time : %d us ===========\n", deadline_time);//TJSong
    fclose(time_file);
}

void print_deadline(int deadline_time){
    printf("============ deadline time : %d us ===========\n", deadline_time);//TJSong
}

void fprint_predicted_time(float predicted_exec_time){
    FILE *time_file;
    time_file = fopen("times.txt", "a");
    fprintf(time_file, "predicted time = %f\n", predicted_exec_time);
    fclose(time_file);
}

void print_predicted_time(float predicted_exec_time){
    printf("predicted time = %f\n", predicted_exec_time);
}

void fprint_exec_time(int exec_time){
    static int instance_number = 1;
    FILE *time_file;
    time_file = fopen("times.txt", "a");
    fprintf(time_file, "time %d = %d us\n", instance_number, exec_time);
    instance_number++;
    fclose(time_file);
}

void print_exec_time(int exec_time){
    static int instance_number = 1;
    printf("time %d = %d us\n", instance_number, exec_time);
    instance_number++;
}

void fprint_total_time(int exec_time){
    static int instance_number = 1;
    FILE *time_file;
    time_file = fopen("times.txt", "a");
    fprintf(time_file, "time_total %d = %d us\n", instance_number, exec_time);
    instance_number++;
    fclose(time_file);
}

void print_total_time(int exec_time){
    static int instance_number = 1;
    printf("time_total %d = %d us\n", instance_number, exec_time);
    instance_number++;
}

//define exectuion time array for oracle
#if CORE //big
    #if _pocketsphinx_
    int exec_time_arr[50]= {2628965, 1263744, 1877792, 921323, 3359589, 2981796, 2301457, 2629482, 2705059, 1188716, 1893813, 2613509, 2193693, 805751, 2461022, 1152194, 2355681, 2429624, 1446942, 855293, 1246213, 1701739, 2295360, 3739205, 1643585, 921270, 2304967, 1888106, 1465200, 3283557, 1884156, 2326579, 1310348, 630040, 2801835, 985131, 1720021, 2955207, 3306166, 3122800, 2786696, 618042, 1258214, 1952552, 1132699, 614647, 576320, 1095123, 857723, 3038111};
    #endif

    #if _stringsearch_
    int exec_time_arr[1332]= {2445, 2582, 2684, 2591, 2676, 2976, 2446, 2619, 3377, 2352, 2699, 3374, 2987, 2731, 2310, 2346, 2715, 2241, 2296, 2346, 2217, 2296, 2712, 2301, 2609, 2482, 2252, 2361, 3290, 3428, 2247, 3181, 2252, 2603, 2187, 2417, 2251, 2502, 2486, 2349, 3241, 3656, 2293, 2567, 2675, 2766, 2817, 2310, 2282, 2288, 2542, 2630, 2402, 2386, 2292, 3029, 2457, 2288, 2281, 3032, 2421, 2504, 2581, 2605, 2281, 2406, 2903, 2336, 2523, 2561, 2503, 2261, 2290, 3211, 2238, 2157, 2650, 2347, 2595, 2376, 2638, 2542, 2424, 3147, 3076, 2431, 3062, 2438, 3021, 2612, 3166, 2527, 3174, 2397, 3036, 3056, 2581, 3234, 2261, 2656, 2482, 2795, 2862, 2326, 2774, 3351, 2444, 2366, 2791, 2416, 2544, 2572, 2387, 2366, 2741, 2395, 2926, 2975, 2326, 2824, 2972, 2790, 2626, 2651, 2609, 2677, 2987, 2447, 2601, 3405, 2352, 2700, 3376, 2974, 2759, 2282, 2388, 2686, 2290, 2266, 2397, 2187, 2328, 2671, 2329, 2582, 2510, 2402, 2551, 3372, 3554, 2476, 3157, 2280, 2561, 2217, 2472, 2430, 2452, 2513, 2321, 3245, 3696, 2252, 2613, 2647, 2774, 2847, 2282, 2282, 2262, 2582, 2596, 2450, 2347, 2338, 3061, 2486, 2261, 2309, 3081, 2572, 2474, 2609, 2566, 2310, 2367, 2913, 2381, 2496, 2603, 2471, 2445, 2252, 3239, 2212, 2183, 2626, 2386, 2567, 2423, 2586, 2588, 2397, 3245, 3175, 2397, 3090, 2391, 3049, 2594, 3151, 2565, 3146, 2451, 3045, 2997, 2612, 3217, 2289, 2627, 2510, 2794, 2832, 2356, 2747, 3394, 2416, 2414, 2757, 2464, 2525, 2322, 2341, 2367, 2610, 2366, 2968, 2946, 2374, 2817, 3017, 2792, 2581, 2680, 2562, 2717, 3022, 2493, 2571, 3422, 2380, 2672, 3404, 2975, 2732, 2309, 2347, 2723, 2242, 2520, 2346, 2233, 2297, 2700, 2301, 2610, 2482, 2280, 2362, 3293, 3429, 2246, 3196, 2252, 2609, 2186, 2419, 2252, 2488, 2486, 2351, 3216, 3684, 2290, 2567, 2693, 2726, 2863, 2282, 2574, 2262, 2571, 2596, 2401, 2347, 2292, 3075, 2456, 2301, 2281, 3132, 2422, 2521, 2581, 2596, 2281, 2394, 2876, 2364, 2496, 2310, 2472, 2261, 2252, 3259, 2257, 2156, 2655, 2347, 2596, 2376, 2615, 2542, 2425, 3217, 3174, 2438, 3062, 2441, 2902, 2619, 3071, 2526, 3154, 2396, 3025, 2997, 2622, 3247, 2262, 2673, 2482, 2796, 2832, 2355, 2747, 2868, 2443, 2366, 2786, 2417, 2532, 2322, 2386, 2366, 2627, 2366, 2957, 2946, 2354, 2821, 2971, 2808, 2581, 2700, 2562, 2707, 2970, 2447, 2608, 3376, 2397, 2672, 3423, 2977, 2731, 2309, 2347, 2716, 2242, 2446, 2347, 2234, 2297, 2719, 2301, 2610, 2482, 2279, 2361, 3221, 3358, 2246, 3110, 2252, 2601, 2187, 2456, 2252, 2503, 2486, 2352, 3146, 3656, 2280, 2566, 2703, 2727, 2864, 2282, 2282, 2261, 2572, 2625, 2401, 2375, 2291, 3089, 2456, 2300, 2281, 3130, 2422, 2518, 2581, 2595, 2282, 2394, 2876, 2337, 2536, 2561, 2520, 2262, 2300, 3211, 2239, 2156, 2656, 2346, 2595, 2376, 3143, 2542, 2424, 3256, 3146, 2450, 3061, 2439, 3051, 2566, 3181, 2527, 3129, 2396, 3025, 3023, 2582, 3191, 2261, 2671, 2482, 2813, 2861, 2327, 2774, 3352, 2444, 2367, 2798, 2416, 2496, 2526, 2342, 2395, 2706, 2394, 2926, 2907, 2327, 2831, 3018, 2762, 2629, 2652, 2592, 2677, 2971, 2446, 2608, 3422, 2352, 2719, 3377, 2977, 2761, 2282, 2382, 2687, 2288, 2266, 2426, 2187, 2326, 2672, 2330, 2582, 2509, 2251, 2399, 3192, 3380, 2292, 3082, 2280, 2561, 2214, 2472, 2368, 2451, 2515, 2321, 3175, 3694, 2252, 2628, 2647, 2773, 2817, 2310, 2281, 2290, 2541, 2626, 2401, 2375, 2292, 3090, 2500, 2262, 2330, 3081, 2535, 2474, 2611, 2567, 2310, 2366, 2905, 2336, 2525, 2282, 2502, 2262, 2294, 3259, 2211, 2156, 2672, 2377, 2566, 2405, 3116, 2572, 2397, 3245, 3174, 2397, 3105, 2392, 3023, 2567, 3125, 2556, 3147, 2425, 2997, 3024, 2622, 3217, 2311, 2627, 2528, 2767, 3061, 2327, 2746, 3155, 2417, 2395, 2757, 2445, 2497, 2359, 2342, 2414, 2582, 2413, 2955, 2947, 2355, 2781, 3000, 2761, 2610, 2679, 2562, 2722, 3022, 2496, 2572, 3422, 2382, 2672, 3405, 2947, 2760, 2281, 2374, 2715, 2242, 2266, 2387, 2186, 2344, 2672, 2301, 2613, 2482, 2281, 2361, 3220, 3331, 2274, 3081, 2251, 2603, 2187, 2472, 2402, 2498, 2486, 2351, 3147, 3683, 2252, 2594, 2673, 2726, 2855, 2281, 2330, 2262, 2588, 2597, 2430, 2347, 2319, 3062, 2486, 2261, 2320, 3082, 2421, 2520, 2581, 2597, 2281, 2396, 2877, 2375, 2496, 2326, 2472, 2307, 2252, 3241, 2211, 2186, 2627, 2380, 2567, 2405, 2586, 2570, 2397, 3253, 3191, 2397, 3107, 2391, 2933, 2596, 3072, 2557, 3147, 2424, 3025, 2996, 2626, 3216, 2309, 2626, 2526, 2795, 2832, 2355, 2746, 3380, 2417, 2392, 2756, 2417, 2538, 2571, 2390, 2367, 2764, 2367, 2957, 2946, 2355, 2781, 3012, 2966, 2581, 2699, 2562, 2707, 3045, 2447, 2600, 3376, 2387, 2671, 3423, 2992, 2732, 2312, 2346, 2713, 2241, 2295, 2347, 2214, 2297, 2699, 2301, 2621, 2482, 2299, 2362, 3237, 3361, 2246, 3186, 2252, 2602, 2187, 2519, 2401, 2502, 2486, 2350, 3244, 3656, 2280, 2566, 2675, 2726, 2844, 2281, 2282, 2262, 2591, 2643, 2402, 2392, 2292, 3091, 2456, 2290, 2281, 3074, 2421, 2519, 2582, 2615, 2282, 2412, 2906, 2336, 2526, 2281, 2500, 2261, 2251, 3212, 2259, 2156, 2673, 2347, 2595, 2377, 2615, 2542, 2425, 3216, 3173, 2437, 3061, 2440, 2902, 2611, 3100, 2527, 3174, 2396, 3024, 2997, 2581, 3243, 2262, 2667, 2482, 2813, 2832, 2373, 2776, 3352, 2443, 2367, 2785, 2417, 2524, 2321, 2369, 2366, 2625, 2366, 2975, 2973, 2327, 2847, 2971, 2789, 2582, 2680, 2589, 2676, 3033, 2447, 2619, 3376, 2352, 2702, 3377, 2975, 2731, 2310, 2346, 2715, 2241, 2307, 2347, 2261, 2296, 2717, 2302, 2610, 2510, 2252, 2361, 3266, 3429, 2247, 3176, 2252, 2561, 2235, 2472, 2447, 2451, 2516, 2322, 3245, 3657, 2252, 2595, 2647, 2754, 2817, 2322, 2282, 2310, 2542, 2643, 2401, 2377, 2292, 3088, 2457, 2303, 2281, 3131, 2481, 2474, 2612, 2567, 2309, 2366, 2904, 2337, 2527, 2562, 2501, 2262, 2287, 3212, 2257, 2157, 2675, 2347, 2598, 2377, 3143, 2580, 2397, 3267, 3147, 2396, 3092, 2391, 3050, 2566, 3178, 2555, 3147, 2425, 2996, 3034, 2581, 3216, 2308, 2626, 2510, 2766, 2881, 2326, 2775, 3381, 2416, 2395, 2757, 2461, 2496, 2370, 2341, 2413, 2712, 2397, 2927, 2974, 2355, 2817, 3011, 2762, 2628, 2652, 2608, 2708, 3021, 2476, 2571, 3415, 2352, 2717, 3423, 2946, 2761, 2282, 2375, 2686, 2269, 2266, 2373, 2187, 2333, 2672, 2348, 2582, 2482, 2251, 2362, 3221, 3332, 2286, 3081, 2298, 2561, 2187, 2372, 2281, 2462, 2514, 2322, 3175, 3686, 2251, 2595, 2647, 2762, 2863, 2282, 2329, 2262, 2570, 2596, 2429, 2347, 2320, 3062, 2496, 2262, 2327, 3081, 2467, 2474, 2612, 2599, 2281, 2395, 2876, 2363, 2497, 2308, 2472, 2302, 2252, 3258, 2212, 2202, 2626, 2375, 2567, 2404, 2586, 2567, 2397, 3246, 3176, 2396, 3067, 2392, 3068, 2613, 3152, 2557, 3147, 2424, 3025, 2996, 2610, 3217, 2289, 2626, 2524, 2766, 2832, 2372, 2746, 3380, 2416, 2394, 2757, 2445, 2496, 2322, 2341, 2394, 2621, 2366, 2972, 2946, 2373, 2817, 3003, 2790, 2582, 2692, 2561, 2722, 3022, 2492, 2572, 3491, 2379, 2671, 3404, 2974, 2731, 2311, 2347, 2723, 2242, 2313, 2347, 2233, 2296, 2701, 2302, 2611, 2482, 2280, 2361, 3220, 3360, 2247, 3127, 2251, 2609, 2186, 2518, 2402, 2482, 2486, 2354, 3147, 3686, 2281, 2566, 2675, 2726, 2858, 2282, 2610, 2261, 2588, 2596, 2432, 2347, 2319, 3089, 2456, 2289, 2281, 3114, 2422, 2515, 2581, 2614, 2282, 2414, 2877, 2367, 2496, 2309, 2471, 2290, 2251, 3252, 2265, 2156, 2673, 2347, 2596, 2377, 3144, 2542, 2424, 3216, 3174, 2424, 3061, 2432, 2901, 2614, 3118, 2526, 3175, 2396, 3025, 2997, 2582, 3243, 2261, 2654, 2481, 2811, 2832, 2377, 2793, 3351, 2447, 2366, 2784, 2416, 2525, 2322, 2369, 2367, 2734, 2366, 2968, 2970, 2327, 2850, 2972, 2793, 2582, 2680, 2590, 2677, 3029, 2447, 2616, 3421, 2352, 2703, 3376, 2974, 2731, 2321, 2346, 2732, 2242, 2267, 2346, 2215, 2297, 2732, 2302, 2609, 2516, 2252, 2408, 3266, 3449, 2246, 3123, 2279, 2562, 2214, 2472, 2432, 2461, 2534, 2322, 3193, 3687, 2252, 2594, 2647, 2755, 2817, 2308, 2282, 2290, 2542, 2635, 2401, 2395, 2292, 3113, 2457, 2292, 2281, 3109, 2465, 2474, 2623, 2567, 2329, 2366, 2924, 2336, 2526, 2562, 2501, 2262, 2293, 3212, 2259, 2157, 2672, 2346, 2597, 2377, 2587, 2571, 2396, 3243, 3146, 2424, 3097, 2391, 3068, 2566, 3197, 2526, 3177, 2424, 2996, 3037, 2581, 3262, 2308, 2627, 2512, 2767, 2861, 2327, 2773, 3378, 2417, 2395, 2756, 2453, 2497, 2528, 2342, 2414, 2712, 2396, 2927, 2974, 2326, 2817, 3019, 3001};
    #endif

    #if _sha_
    int exec_time_arr[100]= {4425, 41250, 42099, 34490, 27332, 45727, 3345, 45481, 17599, 46642, 27074, 19020, 8936, 15263, 2136, 12601, 24039, 18088, 31155, 15049, 16071, 48889, 18585, 39150, 24225, 9570, 8002, 9117, 29451, 262, 45737, 43708, 48296, 24581, 19191, 29021, 5674, 29227, 1607, 26287, 50434, 37432, 13310, 23478, 38834, 32898, 27919, 44654, 22661, 33185, 39523, 41356, 26324, 25198, 39352, 51297, 17318, 3281, 17324, 12794, 24074, 42353, 7696, 12698, 47084, 23166, 47250, 45448, 21725, 5327, 49609, 45746, 4313, 24470, 29530, 47418, 26506, 22441, 32076, 11415, 26564, 24173, 41000, 36962, 13712, 24589, 46940, 27497, 14351, 24793, 21878, 23270, 12868, 2733, 33276, 31993, 4194, 24001, 37151, 6087};
    #endif

    #if _rijndael_
    int exec_time_arr[99]= {13366, 14596, 30132, 17818, 4934, 29222, 24197, 17312, 25277, 7574, 4860, 696, 27644, 13582, 14242, 24888, 6623, 5588, 13924, 26126, 15617, 5695, 24324, 4845, 20567, 12536, 15589, 1560, 27921, 8072, 14296, 21262, 21791, 28889, 29133, 785, 23028, 16688, 22171, 20830, 14473, 22122, 7591, 8700, 5323, 12111, 2196, 17858, 3424, 24005, 21260, 10873, 17601, 20519, 19446, 25565, 5742, 15072, 16053, 6746, 21139, 469, 6017, 6672, 24177, 28881, 6962, 18876, 20513, 15337, 15296, 20441, 1331, 28091, 12220, 6332, 16075, 26239, 30324, 18813, 10919, 4153, 13991, 24632, 25160, 26052, 11054, 16783, 6223, 27491, 19599, 27374, 26442, 11499, 7678, 28442, 1514, 6380, 24183};
    #endif

    #if _xpilot_slice_
    int exec_time_arr[2300]= {13, 2, 2, 3, 2, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 102, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 3, 2, 2, 3, 3, 3, 3, 2, 3, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 3, 4, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 2, 4, 2, 2, 2, 3, 3, 2, 3, 1535, 521, 301, 1486, 197, 154, 153, 150, 149, 151, 150, 146, 160, 151, 149, 147, 150, 150, 146, 147, 149, 146, 156, 151, 156, 158, 151, 150, 145, 610, 246, 226, 249, 220, 213, 212, 223, 215, 212, 231, 206, 209, 217, 237, 241, 234, 264, 237, 239, 247, 249, 253, 251, 281, 250, 250, 249, 569, 322, 312, 325, 310, 299, 299, 299, 299, 297, 400, 297, 304, 300, 304, 297, 315, 361, 302, 304, 299, 291, 308, 308, 340, 310, 313, 306, 550, 386, 383, 420, 395, 390, 387, 388, 388, 389, 416, 383, 389, 392, 386, 381, 379, 393, 370, 359, 362, 354, 354, 351, 383, 355, 356, 364, 688, 437, 430, 461, 445, 463, 438, 438, 435, 425, 452, 438, 432, 433, 419, 447, 435, 462, 432, 443, 449, 440, 450, 478, 517, 493, 493, 495, 494, 472, 480, 486, 465, 457, 488, 469, 466, 450, 469, 448, 441, 447, 436, 445, 439, 465, 437, 443, 449, 445, 443, 448, 457, 459, 461, 500, 479, 468, 473, 493, 471, 454, 453, 445, 443, 441, 477, 471, 470, 469, 469, 479, 497, 500, 465, 452, 447, 441, 443, 445, 471, 449, 453, 457, 451, 441, 542, 491, 459, 447, 449, 462, 447, 430, 456, 431, 418, 437, 405, 399, 397, 405, 387, 385, 382, 380, 383, 390, 419, 393, 385, 387, 391, 380, 379, 403, 369, 364, 366, 354, 355, 352, 392, 346, 343, 343, 350, 347, 341, 394, 358, 367, 372, 404, 376, 382, 413, 383, 375, 378, 373, 375, 361, 418, 373, 382, 379, 385, 379, 380, 406, 394, 383, 399, 402, 394, 396, 428, 390, 398, 399, 402, 400, 398, 439, 412, 402, 408, 409, 432, 409, 446, 410, 413, 418, 423, 433, 423, 456, 424, 428, 419, 431, 423, 425, 449, 412, 421, 415, 412, 407, 412, 424, 416, 412, 416, 408, 410, 402, 433, 398, 409, 406, 419, 418, 449, 516, 453, 446, 445, 477, 444, 458, 486, 456, 444, 438, 422, 414, 418, 451, 430, 437, 444, 454, 461, 453, 489, 462, 456, 457, 490, 486, 473, 522, 485, 470, 499, 502, 474, 461, 487, 444, 442, 430, 456, 424, 422, 454, 420, 424, 427, 422, 419, 420, 454, 431, 418, 422, 419, 424, 420, 427, 433, 424, 423, 427, 426, 419, 445, 420, 419, 415, 414, 433, 426, 463, 430, 434, 442, 450, 446, 444, 471, 451, 444, 446, 448, 444, 444, 477, 438, 437, 432, 431, 434, 430, 449, 434, 441, 436, 434, 433, 432, 450, 420, 425, 430, 429, 436, 450, 466, 432, 441, 522, 519, 474, 454, 465, 435, 431, 438, 424, 417, 409, 429, 399, 397, 398, 379, 381, 371, 386, 372, 370, 373, 388, 372, 385, 378, 383, 384, 383, 385, 386, 396, 391, 390, 388, 389, 378, 399, 371, 382, 381, 390, 387, 389, 397, 403, 387, 402, 411, 403, 403, 420, 404, 406, 411, 401, 402, 404, 392, 400, 384, 382, 392, 376, 377, 379, 381, 384, 380, 391, 399, 398, 411, 420, 424, 414, 415, 417, 417, 418, 408, 409, 396, 402, 392, 389, 395, 376, 374, 374, 372, 374, 374, 380, 374, 372, 365, 369, 365, 369, 370, 370, 381, 385, 380, 386, 378, 379, 393, 434, 402, 393, 405, 405, 415, 415, 415, 422, 421, 422, 407, 392, 400, 396, 387, 405, 400, 400, 390, 388, 371, 379, 385, 381, 399, 398, 457, 453, 414, 406, 395, 414, 384, 390, 395, 395, 389, 398, 379, 388, 372, 377, 369, 374, 370, 376, 370, 372, 370, 375, 379, 381, 392, 376, 391, 377, 378, 383, 385, 371, 376, 379, 372, 373, 371, 366, 367, 380, 376, 399, 388, 389, 391, 409, 408, 409, 399, 398, 400, 400, 407, 398, 394, 391, 400, 406, 400, 405, 448, 364, 364, 364, 357, 368, 394, 366, 356, 355, 352, 347, 350, 338, 346, 339, 333, 328, 326, 323, 331, 327, 335, 341, 340, 335, 343, 348, 344, 349, 344, 343, 372, 335, 340, 333, 329, 328, 338, 328, 332, 338, 358, 340, 398, 397, 398, 400, 400, 402, 400, 393, 392, 395, 408, 395, 395, 391, 391, 381, 382, 383, 382, 398, 406, 410, 416, 404, 418, 402, 406, 406, 405, 402, 475, 437, 456, 412, 410, 405, 401, 404, 393, 386, 383, 380, 378, 374, 374, 375, 370, 381, 373, 378, 376, 382, 372, 384, 369, 382, 384, 375, 386, 370, 372, 377, 374, 377, 366, 357, 355, 361, 361, 354, 359, 355, 367, 382, 368, 386, 390, 391, 407, 398, 397, 398, 414, 421, 420, 411, 412, 410, 397, 404, 392, 390, 395, 389, 377, 375, 359, 368, 361, 390, 379, 375, 385, 388, 404, 389, 392, 396, 380, 384, 378, 379, 383, 390, 380, 383, 393, 383, 388, 379, 378, 379, 397, 397, 382, 391, 388, 394, 385, 381, 390, 385, 406, 403, 391, 393, 384, 387, 387, 397, 415, 380, 378, 383, 385, 390, 393, 387, 396, 391, 390, 385, 393, 390, 390, 396, 397, 405, 413, 421, 426, 431, 432, 456, 466, 458, 469, 527, 506, 493, 462, 452, 474, 451, 436, 429, 439, 431, 422, 417, 407, 402, 402, 395, 398, 392, 387, 385, 387, 379, 374, 380, 367, 373, 382, 381, 395, 383, 384, 385, 380, 387, 380, 377, 389, 376, 387, 384, 398, 382, 399, 404, 403, 398, 403, 400, 398, 410, 417, 421, 420, 472, 430, 429, 426, 431, 424, 422, 419, 412, 405, 410, 409, 405, 414, 455, 374, 368, 376, 378, 384, 385, 428, 408, 400, 394, 380, 376, 378, 378, 376, 379, 373, 373, 377, 379, 373, 382, 375, 377, 381, 380, 389, 389, 389, 388, 379, 370, 363, 355, 360, 357, 356, 356, 356, 355, 355, 348, 376, 363, 348, 381, 360, 359, 362, 362, 362, 370, 372, 367, 373, 373, 375, 379, 375, 368, 388, 374, 365, 364, 365, 369, 380, 444, 415, 436, 404, 400, 387, 384, 373, 368, 364, 355, 358, 356, 351, 341, 340, 368, 365, 366, 354, 341, 328, 329, 361, 323, 321, 324, 324, 318, 323, 340, 323, 321, 322, 315, 319, 311, 330, 320, 305, 300, 303, 298, 321, 345, 326, 328, 338, 348, 356, 341, 370, 347, 346, 339, 343, 336, 337, 363, 332, 333, 323, 327, 318, 328, 363, 335, 344, 344, 355, 360, 350, 371, 344, 352, 336, 396, 386, 399, 422, 405, 406, 408, 409, 419, 406, 431, 411, 410, 417, 417, 417, 407, 446, 420, 413, 412, 414, 421, 410, 440, 407, 395, 401, 394, 404, 399, 431, 420, 409, 418, 398, 394, 400, 421, 405, 390, 388, 388, 388, 379, 417, 390, 390, 399, 389, 391, 393, 416, 394, 416, 399, 396, 412, 429, 429, 401, 458, 415, 414, 400, 399, 451, 407, 405, 398, 415, 403, 408, 434, 397, 401, 381, 386, 372, 394, 419, 381, 391, 386, 395, 408, 416, 447, 419, 421, 427, 424, 409, 412, 437, 401, 397, 389, 398, 382, 375, 413, 394, 374, 402, 396, 393, 427, 452, 415, 449, 431, 443, 443, 445, 472, 461, 446, 452, 447, 451, 445, 477, 443, 440, 438, 452, 458, 456, 474, 458, 460, 453, 462, 458, 464, 489, 460, 454, 463, 458, 463, 447, 473, 447, 452, 438, 435, 428, 425, 443, 416, 409, 414, 417, 429, 434, 465, 456, 433, 424, 420, 431, 433, 456, 433, 444, 436, 438, 440, 432, 461, 429, 411, 424, 426, 435, 443, 460, 431, 433, 454, 437, 449, 439, 465, 433, 434, 434, 430, 425, 420, 441, 435, 444, 423, 420, 421, 488, 520, 458, 441, 436, 432, 430, 427, 449, 413, 408, 405, 406, 399, 391, 414, 388, 378, 378, 366, 417, 381, 398, 393, 373, 372, 359, 362, 356, 397, 356, 355, 352, 347, 362, 360, 383, 397, 372, 391, 367, 384, 397, 435, 392, 417, 414, 427, 426, 418, 443, 424, 427, 415, 410, 423, 428, 453, 429, 410, 415, 412, 419, 420, 430, 402, 406, 411, 412, 424, 409, 462, 437, 449, 440, 451, 441, 444, 471, 455, 446, 431, 429, 426, 432, 449, 418, 428, 421, 456, 434, 427, 458, 425, 422, 417, 400, 402, 392, 428, 390, 405, 396, 397, 394, 392, 420, 397, 386, 397, 406, 397, 403, 444, 424, 419, 420, 419, 422, 424, 451, 417, 423, 426, 416, 443, 420, 459, 426, 428, 430, 429, 430, 436, 457, 425, 440, 444, 446, 463, 462, 491, 458, 448, 446, 445, 432, 446, 475, 450, 448, 443, 439, 428, 421, 492, 385, 377, 374, 378, 377, 378, 427, 383, 387, 378, 389, 389, 381, 413, 373, 374, 377, 368, 361, 366, 389, 371, 365, 366, 367, 368, 378, 409, 375, 380, 379, 373, 369, 359, 435, 331, 332, 338, 335, 332, 325, 360, 334, 385, 381, 449, 412, 414, 460, 388, 381, 378, 370, 355, 341, 360, 363, 329, 324, 320, 316, 320, 340, 318, 314, 322, 327, 328, 324, 347, 323, 316, 320, 312, 312, 311, 343, 308, 309, 310, 309, 306, 305, 295, 303, 308, 300, 316, 328, 318, 354, 337, 357, 347, 340, 357, 357, 434, 398, 406, 408, 409, 412, 418, 437, 409, 414, 403, 411, 404, 401, 437, 393, 388, 386, 377, 384, 384, 406, 387, 380, 381, 378, 383, 371, 421, 378, 374, 412, 380, 385, 392, 417, 386, 388, 395, 397, 391, 402, 427, 403, 406, 411, 413, 411, 415, 446, 411, 395, 412, 412, 410, 407, 445, 409, 417, 411, 415, 418, 418, 458, 433, 450, 449, 466, 494, 461, 510, 459, 454, 456, 459, 471, 466, 512, 461, 457, 464, 456, 455, 472, 496, 474, 472, 464, 443, 450, 451, 495, 460, 463, 465, 466, 459, 447, 471, 444, 437, 434, 434, 423, 430, 453, 445, 424, 433, 437, 427, 431, 479, 441, 435, 438, 432, 428, 426, 460, 420, 434, 422, 424, 435, 437, 465, 447, 454, 445, 451, 464, 462, 504, 470, 468, 476, 456, 453, 439, 466, 439, 471, 460, 464, 469, 475, 499, 479, 485, 494, 488, 498, 492, 518, 488, 486, 478, 476, 480, 478, 510, 466, 498, 479, 484, 473, 481, 509, 481, 476, 480, 472, 474, 502, 525, 480, 482, 550, 526, 508, 496, 536, 482, 460, 453, 451, 440, 434, 466, 444, 449, 453, 448, 445, 446, 473, 450, 440, 427, 427, 418, 422, 412, 401, 397, 400, 390, 382, 388, 382, 386, 387, 390, 400, 400, 401, 391, 414, 388, 380, 402, 406, 400, 413, 424, 421, 427, 427, 430, 433, 423, 429, 427, 430, 437, 437, 444, 469, 437, 446, 449, 431, 448, 448, 475, 440, 441, 429, 418, 413, 424, 423, 436, 491, 459, 460, 440, 451, 464, 445, 435, 453, 439, 443, 432, 462, 429, 435, 436, 437, 438, 436, 430, 442, 451, 465, 452, 460, 471, 500, 475, 489, 476, 480, 477, 475, 532, 471, 484, 484, 490, 477, 471, 508, 494, 464, 467, 484, 459, 468, 458, 465, 467, 427, 451, 519, 472, 530, 464, 471, 469, 462, 446, 451, 445, 447, 443, 431, 424, 420, 412, 399, 396, 446, 363, 359, 354, 349, 380, 346, 347, 355, 356, 352, 350, 362, 354, 358, 353, 363, 359, 363, 359, 367, 351, 363, 349, 348, 382, 375, 373, 368, 379, 375, 376, 374, 381, 370, 368, 374, 365, 372, 370, 369, 393, 377, 500, 386, 375, 375, 393, 377, 368, 372, 359, 365, 368, 365, 367, 381, 381, 385, 383, 385, 371, 376, 370, 362, 367, 405, 338, 349, 325, 340, 581, 394, 396, 388, 426, 382, 395, 370, 367, 385, 388, 378, 376, 371, 373, 364, 363, 362, 369, 356, 356, 356, 351, 351, 344, 352, 355, 364, 353, 353, 364, 358, 357, 364, 359, 362, 359, 370, 364, 408, 423, 403, 394, 402, 399, 399, 462, 433, 436, 424, 421, 427, 417, 411, 408, 404, 419, 422, 432, 415, 499, 416, 400, 385, 392, 390, 390, 391, 375, 380, 370, 387, 372, 372, 366, 362, 355, 353, 351, 349, 354, 355, 354, 365, 360, 361, 363, 365, 368, 396, 389, 392, 387, 402, 403, 409, 429, 411, 415, 422, 405, 412, 407, 398, 404, 393, 397, 390, 387, 388, 387, 395, 391, 386, 396, 399, 403, 437, 384, 393, 373, 369, 375, 388, 371, 374, 371, 366, 353, 358, 349, 345, 336, 340, 336, 339, 343, 334, 344, 348, 333, 340, 342, 345, 350, 347, 348, 344, 335, 358, 349, 362, 357, 360, 362, 369, 344, 348, 333, 373, 351, 383, 410, 397, 417, 422, 436, 418, 405, 414, 416, 413, 423, 423, 413, 411, 409, 401, 411, 401, 398, 400, 398, 470, 427, 418, 425, 392, 394, 395, 397, 406, 394, 399, 394, 400, 403, 411, 395, 402, 412, 427, 418, 401, 410, 409, 412, 411, 402, 391, 398, 387, 383, 382, 376, 374, 374, 368, 369, 360, 367, 365, 382, 361, 360, 365, 386, 381, 381, 395, 406, 397, 397, 402, 406, 410, 403, 406, 406, 402, 409, 406, 407, 412, 415, 409, 416, 417, 415, 416, 413, 409, 406, 406, 408, 401, 401, 405, 428, 407, 410, 424, 431, 415, 419, 424, 438, 435, 424, 429, 427, 417, 424, 414, 419, 408, 403, 391, 386, 375, 367, 356, 356, 351, 348, 369, 404, 362, 362, 371, 366, 394, 380, 380, 382, 380, 385, 376, 374, 382, 395, 403, 402, 401, 396, 391, 385, 380, 386, 407, 368, 364, 356, 350};
    #endif

    #if _2048_slice_
    int exec_time_arr[165]= {1012, 1050, 961, 1014, 969, 969, 929, 1013, 940, 35305, 1005, 941, 1059, 1040, 933, 968, 25723, 1077, 942, 985, 16456, 1059, 938, 981, 28019, 998, 974, 947, 13467, 1082, 944, 980, 25762, 1024, 951, 942, 16821, 1032, 944, 938, 24613, 1036, 969, 941, 16762, 1036, 945, 950, 26901, 990, 964, 937, 938, 1021, 941, 970, 23783, 1001, 982, 946, 942, 992, 952, 942, 26356, 1000, 1009, 943, 978, 998, 983, 939, 22484, 1045, 993, 954, 940, 1065, 1010, 944, 26156, 1002, 1033, 941, 986, 1122, 972, 973, 935, 1259, 994, 964, 936, 19749, 1010, 942, 932, 1279, 1006, 942, 940, 14087, 1041, 947, 944, 1414, 1007, 941, 938, 13018, 1029, 944, 942, 1412, 994, 965, 938, 14996, 1047, 991, 949, 27482, 999, 938, 943, 15891, 1036, 943, 937, 24596, 1017, 962, 936, 17395, 1104, 944, 994, 25618, 1063, 965, 1001, 942, 1117, 943, 969, 26362, 1235, 1003, 967, 939, 16275, 1047, 943, 942, 1352, 994, 942, 944, 19494, 996, 972, 939, 25404, 1004, 1006};
    #endif

    #if _curseofwar_slice_
    int exec_time_arr[2002]= {952, 192, 184, 183, 183, 194, 192, 193, 198, 197, 198, 196, 197, 197, 197, 196, 196, 196, 197, 3386, 196, 201, 200, 199, 199, 199, 199, 198, 198, 199, 203, 197, 198, 198, 200, 200, 201, 200, 200, 3370, 198, 197, 195, 201, 202, 201, 202, 202, 202, 201, 202, 202, 201, 201, 201, 201, 202, 202, 201, 3385, 200, 199, 197, 199, 199, 198, 196, 200, 197, 198, 197, 196, 197, 197, 198, 199, 197, 197, 198, 3363, 205, 205, 202, 203, 204, 203, 202, 204, 202, 203, 202, 203, 202, 203, 202, 202, 202, 202, 202, 3435, 206, 205, 204, 205, 204, 203, 204, 205, 203, 204, 203, 203, 203, 204, 203, 203, 204, 204, 204, 3422, 208, 206, 204, 206, 205, 206, 204, 205, 204, 203, 204, 203, 204, 203, 203, 203, 204, 203, 203, 3355, 206, 206, 204, 206, 206, 205, 205, 207, 204, 205, 205, 205, 205, 205, 204, 205, 204, 204, 205, 3412, 204, 202, 201, 201, 201, 200, 205, 207, 205, 205, 205, 206, 205, 205, 205, 205, 205, 206, 206, 3418, 204, 204, 201, 203, 201, 201, 201, 202, 201, 201, 200, 201, 201, 201, 201, 200, 200, 201, 200, 3396, 204, 203, 201, 209, 208, 207, 206, 208, 207, 207, 207, 207, 207, 207, 206, 206, 207, 207, 207, 3489, 206, 205, 207, 210, 209, 207, 208, 207, 207, 206, 207, 206, 207, 207, 208, 208, 207, 208, 207, 3427, 213, 211, 208, 209, 209, 208, 208, 210, 207, 208, 207, 208, 208, 208, 208, 209, 208, 208, 207, 3482, 212, 211, 209, 210, 208, 206, 207, 207, 208, 207, 208, 207, 207, 207, 207, 208, 207, 211, 208, 3423, 209, 208, 209, 209, 208, 208, 210, 209, 209, 210, 210, 210, 210, 209, 209, 210, 210, 210, 210, 3471, 213, 213, 210, 212, 212, 210, 211, 213, 210, 211, 211, 210, 211, 210, 210, 210, 210, 211, 210, 3476, 208, 208, 210, 213, 212, 210, 210, 212, 210, 211, 210, 211, 211, 211, 210, 211, 210, 210, 210, 3478, 210, 213, 211, 213, 213, 211, 211, 212, 211, 211, 212, 211, 211, 211, 210, 211, 211, 211, 210, 3468, 215, 213, 211, 212, 214, 211, 211, 213, 211, 212, 210, 212, 211, 211, 211, 211, 212, 211, 211, 3546, 216, 214, 211, 214, 211, 209, 211, 211, 210, 210, 209, 209, 209, 210, 210, 213, 211, 209, 210, 3574, 214, 213, 211, 212, 212, 210, 213, 212, 212, 212, 213, 211, 212, 212, 212, 211, 212, 213, 212, 3503, 217, 214, 214, 215, 216, 215, 214, 215, 214, 213, 214, 213, 214, 213, 214, 213, 213, 213, 214, 3477, 217, 216, 214, 216, 215, 214, 214, 216, 214, 213, 214, 215, 214, 214, 214, 214, 214, 214, 214, 3486, 212, 211, 209, 210, 212, 209, 207, 208, 212, 212, 212, 212, 211, 212, 213, 213, 213, 214, 212, 3562, 212, 210, 209, 210, 208, 207, 207, 208, 207, 209, 207, 208, 207, 207, 208, 209, 214, 213, 213, 3537, 212, 211, 209, 210, 212, 208, 208, 209, 208, 208, 208, 214, 213, 213, 213, 213, 214, 214, 215, 3545, 217, 216, 216, 217, 217, 213, 213, 214, 214, 213, 214, 214, 213, 213, 214, 214, 213, 215, 215, 3524, 213, 211, 210, 212, 210, 212, 211, 211, 213, 212, 217, 217, 217, 216, 217, 216, 217, 216, 216, 3551, 215, 213, 211, 213, 213, 212, 212, 213, 214, 212, 211, 216, 217, 217, 216, 217, 217, 217, 217, 3595, 220, 219, 217, 219, 217, 215, 214, 215, 216, 215, 214, 215, 215, 214, 215, 216, 215, 215, 216, 3577, 222, 221, 219, 221, 221, 220, 218, 219, 221, 219, 219, 218, 219, 218, 218, 218, 218, 218, 218, 3592, 218, 215, 214, 215, 219, 221, 220, 220, 220, 219, 219, 219, 219, 219, 220, 219, 219, 219, 218, 3576, 224, 224, 220, 221, 222, 220, 217, 219, 219, 218, 218, 218, 218, 218, 217, 218, 218, 219, 217, 3573, 216, 223, 219, 219, 218, 219, 219, 218, 219, 218, 219, 218, 221, 220, 220, 220, 220, 220, 220, 3537, 223, 222, 222, 223, 221, 221, 218, 219, 220, 219, 218, 219, 219, 219, 220, 220, 219, 220, 220, 3584, 224, 222, 221, 221, 222, 219, 219, 220, 219, 219, 219, 219, 219, 219, 219, 221, 219, 220, 219, 3601, 225, 224, 221, 221, 220, 219, 220, 219, 219, 220, 219, 219, 221, 221, 221, 221, 222, 221, 222, 3615, 223, 223, 223, 224, 223, 220, 220, 220, 220, 219, 219, 220, 219, 221, 220, 220, 221, 220, 220, 3556, 219, 223, 222, 223, 222, 221, 221, 223, 221, 221, 222, 221, 221, 221, 221, 222, 222, 222, 222, 3614, 221, 220, 218, 220, 223, 222, 223, 222, 222, 221, 220, 221, 220, 221, 220, 222, 220, 221, 221, 3675, 221, 219, 218, 219, 217, 216, 216, 216, 217, 222, 221, 221, 222, 221, 223, 223, 223, 222, 223, 3676, 220, 224, 223, 224, 224, 225, 224, 221, 222, 222, 221, 223, 221, 222, 223, 223, 223, 224, 223, 3640, 225, 224, 223, 224, 223, 222, 221, 222, 222, 222, 221, 222, 222, 223, 225, 223, 222, 221, 221, 3690, 220, 224, 224, 223, 222, 224, 226, 224, 225, 224, 224, 224, 223, 224, 224, 224, 224, 223, 225, 3678, 228, 228, 226, 227, 224, 224, 223, 223, 223, 223, 223, 223, 223, 224, 226, 226, 226, 228, 225, 3706, 224, 228, 227, 227, 226, 224, 224, 224, 225, 223, 224, 224, 223, 223, 225, 225, 225, 224, 226, 3673, 223, 221, 221, 223, 222, 222, 222, 222, 222, 221, 220, 221, 221, 221, 227, 227, 227, 227, 227, 3760, 226, 228, 229, 229, 227, 226, 227, 225, 225, 225, 225, 225, 224, 224, 224, 226, 224, 225, 225, 3677, 227, 228, 227, 227, 224, 226, 225, 224, 226, 224, 226, 225, 226, 226, 227, 226, 227, 226, 225, 3687, 230, 229, 228, 229, 228, 228, 230, 228, 226, 226, 225, 225, 225, 225, 225, 227, 225, 226, 225, 3761, 229, 232, 227, 227, 227, 226, 228, 227, 227, 226, 226, 227, 228, 228, 228, 228, 229, 228, 229, 3740, 232, 230, 230, 231, 230, 230, 228, 227, 228, 228, 228, 227, 227, 228, 230, 230, 228, 228, 227, 3733, 231, 228, 230, 228, 227, 227, 229, 228, 227, 227, 227, 228, 227, 228, 227, 226, 227, 228, 227, 3726, 231, 231, 229, 230, 229, 228, 229, 229, 228, 228, 229, 229, 228, 230, 231, 232, 229, 229, 228, 3637, 234, 230, 230, 229, 229, 229, 230, 230, 229, 230, 230, 230, 229, 229, 231, 231, 231, 230, 231, 3775, 234, 234, 231, 233, 232, 232, 229, 229, 229, 229, 229, 229, 229, 228, 228, 230, 229, 228, 229, 3746, 226, 225, 224, 224, 224, 229, 230, 230, 228, 229, 229, 229, 230, 229, 230, 229, 231, 229, 229, 3758, 234, 233, 231, 232, 231, 230, 230, 231, 232, 230, 231, 229, 230, 229, 231, 229, 230, 232, 230, 3748, 229, 229, 227, 228, 232, 230, 232, 232, 231, 230, 231, 231, 230, 230, 231, 231, 231, 231, 231, 3824, 233, 234, 233, 233, 232, 231, 232, 232, 231, 230, 231, 230, 231, 231, 232, 233, 234, 233, 234, 3772, 232, 232, 235, 237, 234, 233, 232, 232, 234, 232, 233, 232, 232, 232, 232, 234, 233, 232, 235, 3846, 238, 237, 236, 237, 234, 233, 233, 232, 233, 233, 232, 233, 233, 233, 233, 234, 233, 232, 235, 3839, 234, 232, 236, 237, 234, 235, 234, 233, 234, 232, 233, 232, 232, 232, 232, 232, 232, 234, 235, 3810, 237, 238, 237, 237, 235, 233, 233, 233, 233, 233, 232, 233, 235, 233, 233, 233, 232, 233, 234, 3810, 232, 236, 236, 238, 234, 234, 234, 233, 235, 234, 232, 234, 234, 233, 233, 235, 235, 235, 235, 3822, 238, 238, 235, 237, 235, 235, 235, 235, 235, 234, 235, 235, 235, 237, 235, 234, 234, 233, 235, 3780, 236, 235, 234, 235, 235, 234, 234, 235, 234, 234, 235, 234, 234, 235, 235, 236, 237, 235, 235, 3801, 238, 238, 237, 238, 237, 236, 235, 236, 235, 235, 235, 234, 236, 235, 239, 238, 238, 237, 237, 3778, 240, 239, 236, 239, 238, 239, 239, 237, 240, 238, 235, 235, 236, 235, 235, 236, 235, 237, 236, 3828, 240, 237, 235, 239, 237, 236, 236, 236, 237, 237, 236, 237, 236, 238, 237, 240, 237, 237, 238, 3865, 242, 241, 240, 240, 238, 240, 236, 236, 237, 237, 236, 235, 236, 236, 236, 236, 236, 237, 238, 3851, 239, 237, 236, 237, 236, 236, 236, 237, 236, 236, 238, 238, 237, 238, 238, 238, 239, 238, 237, 3894, 241, 240, 238, 239, 236, 237, 236, 237, 237, 236, 237, 236, 236, 236, 235, 236, 236, 236, 238, 3842, 243, 241, 241, 241, 238, 239, 239, 237, 236, 237, 237, 237, 237, 237, 236, 238, 237, 236, 238, 3855, 243, 246, 241, 242, 239, 237, 237, 237, 237, 237, 237, 237, 237, 237, 240, 239, 240, 240, 239, 3944, 239, 236, 237, 237, 234, 241, 238, 239, 237, 240, 237, 238, 237, 238, 238, 237, 238, 238, 240, 3893, 241, 239, 238, 240, 238, 239, 239, 239, 240, 238, 240, 240, 239, 240, 240, 240, 239, 239, 240, 3910, 245, 243, 242, 242, 241, 240, 238, 239, 239, 239, 238, 239, 238, 238, 239, 238, 238, 238, 239, 3929, 243, 242, 239, 241, 241, 239, 238, 239, 240, 239, 238, 238, 238, 238, 240, 241, 239, 240, 240, 3853, 243, 243, 241, 243, 241, 241, 239, 239, 240, 239, 240, 239, 240, 240, 239, 239, 240, 239, 242, 3934, 246, 243, 243, 244, 244, 243, 242, 240, 240, 241, 239, 240, 240, 241, 240, 239, 243, 240, 240, 3893, 238, 246, 240, 241, 241, 240, 241, 242, 241, 242, 242, 241, 242, 241, 241, 241, 243, 243, 243, 3852, 246, 245, 244, 244, 242, 241, 240, 241, 242, 241, 240, 240, 240, 240, 241, 241, 240, 240, 242, 3875, 242, 241, 241, 242, 240, 240, 241, 242, 241, 243, 242, 242, 242, 241, 242, 242, 242, 242, 241, 3864, 244, 245, 244, 245, 241, 242, 241, 241, 242, 240, 241, 240, 241, 240, 241, 241, 240, 241, 242, 3946, 243, 243, 240, 241, 240, 240, 241, 242, 240, 242, 242, 242, 241, 241, 241, 242, 242, 242, 242, 3864, 247, 244, 244, 244, 242, 242, 240, 240, 241, 243, 240, 241, 240, 240, 240, 240, 240, 240, 241, 3952, 244, 242, 241, 243, 241, 243, 242, 241, 241, 242, 242, 241, 241, 241, 242, 241, 241, 241, 242, 3975, 247, 244, 244, 244, 243, 243, 242, 242, 243, 241, 242, 241, 242, 241, 242, 243, 243, 242, 243, 3947, 246, 245, 244, 246, 244, 243, 242, 242, 243, 242, 242, 242, 243, 242, 241, 241, 242, 242, 242, 3989, 245, 245, 243, 244, 244, 244, 244, 243, 244, 243, 243, 243, 243, 243, 243, 243, 244, 242, 246, 3952, 247, 246, 244, 247, 243, 245, 242, 242, 244, 243, 243, 243, 243, 243, 243, 243, 243, 242, 244, 3965, 242, 242, 239, 240, 239, 239, 238, 238, 239, 242, 244, 243, 243, 243, 243, 243, 243, 244, 244, 4009, 247, 245, 244, 245, 244, 244, 243, 244, 244, 244, 243, 242, 243, 243, 242, 244, 244, 244, 244, 3880, 246, 246, 244, 247, 244, 245, 243, 244, 245, 246, 243, 244, 243, 243, 245, 244, 243, 246, 243, 3923, 246, 244, 243, 244, 242, 245, 244, 242, 243, 243, 243, 242, 243, 244, 244, 246, 244, 245, 244, 3941, 248, 248, 246, 246, 245, 245, 244, 245, 245, 245, 245, 245, 244, 245, 244, 246, 245, 246, 245, 3946, 248, 248, 246, 250, 247, 246, 244, 245, 245, 244, 244, 244, 244, 244, 244, 244, 244, 249, 246, 3959, 247, 245, 245, 245, 244, 245, 246, 245, 244, 246, 246, 246, 245, 246, 246, 246, 246, 246, 247, 3936, 250, 249, 248, 248, 247, 246, 245, 245, 245, 244, 245, 245, 245, 245, 245, 245, 245, 244, 247, 3953, 249, 248};
    #endif

    #if _uzbl_
    int exec_time_arr[286]= {409, 455, 18, 567, 474, 467, 417, 910, 1140, 2623, 313, 377, 580, 468, 23629, 661, 686, 577, 511, 463, 532, 500, 572, 447, 421, 429, 444, 474, 416, 19, 672, 643, 491, 557, 477, 507, 536, 465, 532, 495, 505, 535, 460, 535, 469, 31, 578, 443, 413, 453, 429, 448, 422, 723, 478, 460, 20, 520, 511, 436, 457, 424, 440, 18, 582, 482, 507, 487, 440, 111, 380, 772, 209, 245, 615, 697, 560, 594, 496, 501, 487, 510, 531, 469, 849, 475, 482, 621, 475, 459, 614, 797, 488, 469, 29374, 661, 20, 25086, 42, 1030, 490, 962, 565, 484, 448, 492, 19, 746, 505, 460, 447, 84, 358, 926, 189, 208, 608, 533, 606, 675, 533, 494, 487, 492, 492, 573, 476, 25536, 719, 678, 20, 25690, 43, 1264, 538, 993, 557, 502, 530, 470, 19, 714, 510, 476, 444, 177, 359, 864, 226, 210, 634, 526, 716, 528, 521, 482, 456, 654, 509, 30059, 1076, 472, 675, 477, 940, 601, 515, 474, 475, 20, 748, 512, 462, 439, 172, 403, 883, 198, 220, 601, 499, 704, 477, 26331, 928, 600, 669, 466, 864, 517, 485, 489, 553, 19, 569, 520, 470, 511, 187, 402, 901, 195, 210, 582, 521, 559, 487, 26296, 1028, 455, 679, 461, 797, 515, 562, 478, 462, 20, 566, 523, 473, 526, 187, 366, 889, 186, 237, 699, 465, 532, 482, 26800, 1045, 304, 785, 483, 524, 593, 221, 657, 455, 464, 582, 214, 644, 451, 459, 567, 216, 586, 495, 439, 587, 212, 556, 462, 429, 580, 204, 544, 441, 437, 627, 35, 576, 442, 36, 557, 437, 34, 613, 439, 36, 527, 444, 32, 520, 436, 33, 545, 436, 579, 441, 498, 445, 63};
    #endif

    #if _sha_preread_
    int exec_time_arr[100]= {3919, 37593, 37601, 30621, 24587, 41442, 2992, 40592, 15378, 41062, 23174, 16315, 7792, 13185, 1904, 10862, 20608, 15458, 26603, 13031, 13784, 42153, 15825, 33897, 20529, 8229, 6980, 7908, 25370, 200, 39956, 37351, 42392, 21004, 16532, 24564, 5001, 25162, 1468, 22483, 44879, 32440, 11498, 20279, 33197, 27975, 24127, 38144, 19353, 28540, 34381, 35781, 22407, 21594, 34349, 44745, 14860, 2898, 14744, 11027, 20699, 37146, 6706, 11018, 41669, 19657, 41249, 39840, 18553, 4724, 43794, 40253, 3815, 20947, 25239, 42041, 22745, 19198, 27891, 9872, 22617, 20483, 35294, 31799, 11785, 21017, 41404, 23533, 12353, 20994, 18644, 19820, 11183, 2435, 28889, 27792, 3633, 20499, 32153, 5361};
    #endif

    #if _rijndael_preread_
    int exec_time_arr[99]= {7794, 8729, 17936, 10433, 2715, 17119, 14165, 10116, 15159, 4199, 2653, 215, 16166, 7831, 8158, 14566, 3736, 3132, 8129, 15241, 9046, 3143, 14199, 2725, 12086, 7234, 9051, 718, 16336, 4549, 8308, 12429, 12800, 17011, 17095, 224, 13633, 9659, 13001, 11989, 8449, 12873, 4308, 4963, 2955, 6981, 1095, 10397, 1900, 14033, 39903, 6295, 10314, 12040, 11329, 15007, 3186, 8714, 9378, 3748, 12364, 65, 3396, 3726, 14221, 16964, 3997, 11239, 11972, 8949, 8881, 11902, 584, 16476, 7093, 3506, 9403, 15449, 17754, 10894, 6207, 2218, 8010, 14383, 14709, 15334, 6391, 9734, 3510, 16079, 11393, 15965, 15511, 6598, 4339, 16702, 654, 3652, 14155};
    #endif
//define exectuion time array for oracle
#else //LITTLE

#endif


#endif
